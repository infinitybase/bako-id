/* Autogenerated file. Do not edit manually. */

/* eslint-disable max-classes-per-file */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable @typescript-eslint/consistent-type-imports */

/*
  Fuels version: 0.100.1
  Forc version: 0.66.4
  Fuel-Core version: 0.40.0
*/

import { Contract as __Contract, Interface } from "fuels";
import type {
  Provider,
  Account,
  StorageSlot,
  Address,
  BigNumberish,
  BN,
  FunctionFragment,
  InvokeFunction,
} from 'fuels';

import type { Option, Enum } from "./common";

export enum AccessErrorInput { NotOwner = 'NotOwner' };
export enum AccessErrorOutput { NotOwner = 'NotOwner' };
export type AdjustFeeTypeInput = Enum<{ FEE_0: BigNumberish, FEE_1: BigNumberish }>;
export type AdjustFeeTypeOutput = Enum<{ FEE_0: BN, FEE_1: BN }>;
export type IdentityInput = Enum<{ Address: AddressInput, ContractId: ContractIdInput }>;
export type IdentityOutput = Enum<{ Address: AddressOutput, ContractId: ContractIdOutput }>;
export enum InitializationErrorInput { CannotReinitialized = 'CannotReinitialized' };
export enum InitializationErrorOutput { CannotReinitialized = 'CannotReinitialized' };
export type MarketplaceErrorInput = Enum<{ AssetNotValid: AssetIdInput, OrderAlreadyExists: string, InsufficientBalance: AssetIdInput, ItemNotFound: AssetIdInput, ItemNotValid: AssetIdInput, ItemAmountIsZero: undefined, OrderNotOwned: undefined, OrderNotFound: undefined, OrderAssetNotMatch: [AssetIdInput, AssetIdInput], OrderAmountNotMatch: [], PriceNotPositive: undefined }>;
export type MarketplaceErrorOutput = Enum<{ AssetNotValid: AssetIdOutput, OrderAlreadyExists: string, InsufficientBalance: AssetIdOutput, ItemNotFound: AssetIdOutput, ItemNotValid: AssetIdOutput, ItemAmountIsZero: void, OrderNotOwned: void, OrderNotFound: void, OrderAssetNotMatch: [AssetIdOutput, AssetIdOutput], OrderAmountNotMatch: [], PriceNotPositive: void }>;
export enum PauseErrorInput { Paused = 'Paused', NotPaused = 'NotPaused' };
export enum PauseErrorOutput { Paused = 'Paused', NotPaused = 'NotPaused' };
export enum ReentrancyErrorInput { NonReentrant = 'NonReentrant' };
export enum ReentrancyErrorOutput { NonReentrant = 'NonReentrant' };

export type AddressInput = { bits: string };
export type AddressOutput = AddressInput;
export type AssetAddedEventInput = { asset: AssetIdInput, fee: [BigNumberish, BigNumberish] };
export type AssetAddedEventOutput = { asset: AssetIdOutput, fee: [BN, BN] };
export type AssetFeeAdjustedEventInput = { asset: AssetIdInput, fee: [BigNumberish, BigNumberish] };
export type AssetFeeAdjustedEventOutput = { asset: AssetIdOutput, fee: [BN, BN] };
export type AssetIdInput = { bits: string };
export type AssetIdOutput = AssetIdInput;
export type ContractIdInput = { bits: string };
export type ContractIdOutput = ContractIdInput;
export type OrderInput = { asset: AssetIdInput, amount: BigNumberish, seller: IdentityInput, item_price: BigNumberish, item_asset: AssetIdInput };
export type OrderOutput = { asset: AssetIdOutput, amount: BN, seller: IdentityOutput, item_price: BN, item_asset: AssetIdOutput };
export type OrderCancelledEventInput = { order_id: string };
export type OrderCancelledEventOutput = OrderCancelledEventInput;
export type OrderCreatedEventInput = { order_id: string, order: OrderInput };
export type OrderCreatedEventOutput = { order_id: string, order: OrderOutput };
export type OrderEditedEventInput = { order_id: string, new_asset: AssetIdInput, new_price: BigNumberish };
export type OrderEditedEventOutput = { order_id: string, new_asset: AssetIdOutput, new_price: BN };
export type OrderExecutedEventInput = { order_id: string, buyer: IdentityInput, amount: BigNumberish, asset: AssetIdInput, fee: BigNumberish };
export type OrderExecutedEventOutput = { order_id: string, buyer: IdentityOutput, amount: BN, asset: AssetIdOutput, fee: BN };
export type OwnershipSetInput = { new_owner: IdentityInput };
export type OwnershipSetOutput = { new_owner: IdentityOutput };
export type OwnershipTransferredInput = { new_owner: IdentityInput, previous_owner: IdentityInput };
export type OwnershipTransferredOutput = { new_owner: IdentityOutput, previous_owner: IdentityOutput };

export type MarketplaceConfigurables = Partial<{
  RESOLVER_CONTRACT_ID: string;
}>;

const abi = {
  "programType": "contract",
  "specVersion": "1",
  "encodingVersion": "1",
  "concreteTypes": [
    {
      "type": "()",
      "concreteTypeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
    },
    {
      "type": "(u64, u64)",
      "concreteTypeId": "41bd1a98f0a59642d8f824c805b798a5f268d1f7d05808eb05c4189c493f1be0",
      "metadataTypeId": 0
    },
    {
      "type": "b256",
      "concreteTypeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
    },
    {
      "type": "bool",
      "concreteTypeId": "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903"
    },
    {
      "type": "enum AdjustFeeType",
      "concreteTypeId": "37c7a0f61d0666929a8302499329b65eb89a1eecd905713d86de0851eb41acd0",
      "metadataTypeId": 2
    },
    {
      "type": "enum MarketplaceError",
      "concreteTypeId": "822f1703ab0ed4af1dc35ef9e0ca4958c06eef96d7e0dd9fa8b1a48316ac39cb",
      "metadataTypeId": 3
    },
    {
      "type": "enum standards::src5::AccessError",
      "concreteTypeId": "3f702ea3351c9c1ece2b84048006c8034a24cbc2bad2e740d0412b4172951d3d",
      "metadataTypeId": 4
    },
    {
      "type": "enum std::identity::Identity",
      "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335",
      "metadataTypeId": 5
    },
    {
      "type": "enum std::option::Option<struct events::Order>",
      "concreteTypeId": "395d142e041abd0df6b3980a7e635e939083f5745370d78b72316697b0a016e2",
      "metadataTypeId": 6,
      "typeArguments": [
        "c55cab7602d3f15cab0c13a68816b8dbb16c2921df2b8a3aa62c26bbb1424fd8"
      ]
    },
    {
      "type": "enum sway_libs::ownership::errors::InitializationError",
      "concreteTypeId": "1dfe7feadc1d9667a4351761230f948744068a090fe91b1bc6763a90ed5d3893",
      "metadataTypeId": 7
    },
    {
      "type": "enum sway_libs::pausable::errors::PauseError",
      "concreteTypeId": "8b3afcadf894415a10b09fc3717487e33802c8ffbb030edafe84ca4a71b280bc",
      "metadataTypeId": 8
    },
    {
      "type": "enum sway_libs::reentrancy::errors::ReentrancyError",
      "concreteTypeId": "4d216c57b3357523323f59401c7355785b41bdf832f6e1106272186b94797038",
      "metadataTypeId": 9
    },
    {
      "type": "struct events::AssetAddedEvent",
      "concreteTypeId": "91f28e6b71df131de051f19a1f8cb58ece2165f4a5f9108fbb85471538446fa9",
      "metadataTypeId": 11
    },
    {
      "type": "struct events::AssetFeeAdjustedEvent",
      "concreteTypeId": "8ec71dbeaa645b2b14b88caffc532ebdbbb161e6c75c27bb98b4409a6cb4755a",
      "metadataTypeId": 12
    },
    {
      "type": "struct events::Order",
      "concreteTypeId": "c55cab7602d3f15cab0c13a68816b8dbb16c2921df2b8a3aa62c26bbb1424fd8",
      "metadataTypeId": 13
    },
    {
      "type": "struct events::OrderCancelledEvent",
      "concreteTypeId": "2992862e9a561d761b74985c9333d79e22836314eed6bc983c25dcf096c755c8",
      "metadataTypeId": 14
    },
    {
      "type": "struct events::OrderCreatedEvent",
      "concreteTypeId": "7b55a88023a1041ba857dbda5e33dc9793daf8f5e3fa5bffcdb82aa634ceff43",
      "metadataTypeId": 15
    },
    {
      "type": "struct events::OrderEditedEvent",
      "concreteTypeId": "4daae82842de101195b6ec681faea04e30e9dad318f1c643d114671a812e5ad3",
      "metadataTypeId": 16
    },
    {
      "type": "struct events::OrderExecutedEvent",
      "concreteTypeId": "1ba4a8db83f7ac89d556b54bc6c30eafef4a476bb9660db5e0857a105906547b",
      "metadataTypeId": 17
    },
    {
      "type": "struct std::asset_id::AssetId",
      "concreteTypeId": "c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974",
      "metadataTypeId": 19
    },
    {
      "type": "struct sway_libs::ownership::events::OwnershipSet",
      "concreteTypeId": "e1ef35033ea9d2956f17c3292dea4a46ce7d61fdf37bbebe03b7b965073f43b5",
      "metadataTypeId": 21
    },
    {
      "type": "struct sway_libs::ownership::events::OwnershipTransferred",
      "concreteTypeId": "b3fffbcb3158d7c010c31b194b60fb7857adb4ad61bdcf4b8b42958951d9f308",
      "metadataTypeId": 22
    },
    {
      "type": "u64",
      "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
    }
  ],
  "metadataTypes": [
    {
      "type": "(_, _)",
      "metadataTypeId": 0,
      "components": [
        {
          "name": "__tuple_element",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "__tuple_element",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ]
    },
    {
      "type": "(_, _)",
      "metadataTypeId": 1,
      "components": [
        {
          "name": "__tuple_element",
          "typeId": 19
        },
        {
          "name": "__tuple_element",
          "typeId": 19
        }
      ]
    },
    {
      "type": "enum AdjustFeeType",
      "metadataTypeId": 2,
      "components": [
        {
          "name": "FEE_0",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "FEE_1",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ]
    },
    {
      "type": "enum MarketplaceError",
      "metadataTypeId": 3,
      "components": [
        {
          "name": "AssetNotValid",
          "typeId": 19
        },
        {
          "name": "OrderAlreadyExists",
          "typeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        },
        {
          "name": "InsufficientBalance",
          "typeId": 19
        },
        {
          "name": "ItemNotFound",
          "typeId": 19
        },
        {
          "name": "ItemNotValid",
          "typeId": 19
        },
        {
          "name": "ItemAmountIsZero",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "OrderNotOwned",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "OrderNotFound",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "OrderAssetNotMatch",
          "typeId": 1
        },
        {
          "name": "OrderAmountNotMatch",
          "typeId": 0
        },
        {
          "name": "PriceNotPositive",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        }
      ]
    },
    {
      "type": "enum standards::src5::AccessError",
      "metadataTypeId": 4,
      "components": [
        {
          "name": "NotOwner",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        }
      ]
    },
    {
      "type": "enum std::identity::Identity",
      "metadataTypeId": 5,
      "components": [
        {
          "name": "Address",
          "typeId": 18
        },
        {
          "name": "ContractId",
          "typeId": 20
        }
      ]
    },
    {
      "type": "enum std::option::Option",
      "metadataTypeId": 6,
      "components": [
        {
          "name": "None",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "Some",
          "typeId": 10
        }
      ],
      "typeParameters": [
        10
      ]
    },
    {
      "type": "enum sway_libs::ownership::errors::InitializationError",
      "metadataTypeId": 7,
      "components": [
        {
          "name": "CannotReinitialized",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        }
      ]
    },
    {
      "type": "enum sway_libs::pausable::errors::PauseError",
      "metadataTypeId": 8,
      "components": [
        {
          "name": "Paused",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        },
        {
          "name": "NotPaused",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        }
      ]
    },
    {
      "type": "enum sway_libs::reentrancy::errors::ReentrancyError",
      "metadataTypeId": 9,
      "components": [
        {
          "name": "NonReentrant",
          "typeId": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d"
        }
      ]
    },
    {
      "type": "generic T",
      "metadataTypeId": 10
    },
    {
      "type": "struct events::AssetAddedEvent",
      "metadataTypeId": 11,
      "components": [
        {
          "name": "asset",
          "typeId": 19
        },
        {
          "name": "fee",
          "typeId": 0
        }
      ]
    },
    {
      "type": "struct events::AssetFeeAdjustedEvent",
      "metadataTypeId": 12,
      "components": [
        {
          "name": "asset",
          "typeId": 19
        },
        {
          "name": "fee",
          "typeId": 0
        }
      ]
    },
    {
      "type": "struct events::Order",
      "metadataTypeId": 13,
      "components": [
        {
          "name": "asset",
          "typeId": 19
        },
        {
          "name": "amount",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "seller",
          "typeId": 5
        },
        {
          "name": "item_price",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "item_asset",
          "typeId": 19
        }
      ]
    },
    {
      "type": "struct events::OrderCancelledEvent",
      "metadataTypeId": 14,
      "components": [
        {
          "name": "order_id",
          "typeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        }
      ]
    },
    {
      "type": "struct events::OrderCreatedEvent",
      "metadataTypeId": 15,
      "components": [
        {
          "name": "order_id",
          "typeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        },
        {
          "name": "order",
          "typeId": 13
        }
      ]
    },
    {
      "type": "struct events::OrderEditedEvent",
      "metadataTypeId": 16,
      "components": [
        {
          "name": "order_id",
          "typeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        },
        {
          "name": "new_asset",
          "typeId": 19
        },
        {
          "name": "new_price",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ]
    },
    {
      "type": "struct events::OrderExecutedEvent",
      "metadataTypeId": 17,
      "components": [
        {
          "name": "order_id",
          "typeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        },
        {
          "name": "buyer",
          "typeId": 5
        },
        {
          "name": "amount",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        },
        {
          "name": "asset",
          "typeId": 19
        },
        {
          "name": "fee",
          "typeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ]
    },
    {
      "type": "struct std::address::Address",
      "metadataTypeId": 18,
      "components": [
        {
          "name": "bits",
          "typeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        }
      ]
    },
    {
      "type": "struct std::asset_id::AssetId",
      "metadataTypeId": 19,
      "components": [
        {
          "name": "bits",
          "typeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        }
      ]
    },
    {
      "type": "struct std::contract_id::ContractId",
      "metadataTypeId": 20,
      "components": [
        {
          "name": "bits",
          "typeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        }
      ]
    },
    {
      "type": "struct sway_libs::ownership::events::OwnershipSet",
      "metadataTypeId": 21,
      "components": [
        {
          "name": "new_owner",
          "typeId": 5
        }
      ]
    },
    {
      "type": "struct sway_libs::ownership::events::OwnershipTransferred",
      "metadataTypeId": 22,
      "components": [
        {
          "name": "new_owner",
          "typeId": 5
        },
        {
          "name": "previous_owner",
          "typeId": 5
        }
      ]
    }
  ],
  "functions": [
    {
      "inputs": [
        {
          "name": "asset",
          "concreteTypeId": "c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974"
        },
        {
          "name": "fee",
          "concreteTypeId": "41bd1a98f0a59642d8f824c805b798a5f268d1f7d05808eb05c4189c493f1be0"
        }
      ],
      "name": "add_valid_asset",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "asset",
          "concreteTypeId": "c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974"
        },
        {
          "name": "fee_change",
          "concreteTypeId": "37c7a0f61d0666929a8302499329b65eb89a1eecd905713d86de0851eb41acd0"
        }
      ],
      "name": "adjust_fee",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "order_id",
          "concreteTypeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        }
      ],
      "name": "cancel_order",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "asset",
          "concreteTypeId": "c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974"
        },
        {
          "name": "price",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ],
      "name": "create_order",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        },
        {
          "name": "payable",
          "arguments": []
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "order_id",
          "concreteTypeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        },
        {
          "name": "asset",
          "concreteTypeId": "c0710b6731b1dd59799cf6bef33eee3b3b04a2e40e80a0724090215bbf2ca974"
        },
        {
          "name": "price",
          "concreteTypeId": "1506e6f44c1d6291cdf46395a8e573276a4fa79e8ace3fc891e092ef32d1b0a0"
        }
      ],
      "name": "edit_order",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "order_id",
          "concreteTypeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        }
      ],
      "name": "execute_order",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        },
        {
          "name": "payable",
          "arguments": []
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "order_id",
          "concreteTypeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b"
        }
      ],
      "name": "get_order",
      "output": "395d142e041abd0df6b3980a7e635e939083f5745370d78b72316697b0a016e2",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "owner",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        }
      ],
      "name": "initialize",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read",
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [
        {
          "name": "new_owner",
          "concreteTypeId": "ab7cd04e05be58e3fc15d424c2c4a57f824a2a2d97d67252440a3925ebdc1335"
        }
      ],
      "name": "transfer_ownership",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [],
      "name": "is_paused",
      "output": "b760f44fa5965c2474a3b471467a22c43185152129295af588b022ae50b50903",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "read"
          ]
        }
      ]
    },
    {
      "inputs": [],
      "name": "pause",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "write"
          ]
        }
      ]
    },
    {
      "inputs": [],
      "name": "unpause",
      "output": "2e38e77b22c314a449e91fafed92a43826ac6aa403ae6a8acb6cf58239fbaf5d",
      "attributes": [
        {
          "name": "storage",
          "arguments": [
            "write"
          ]
        }
      ]
    }
  ],
  "loggedTypes": [
    {
      "logId": "4571204900286667806",
      "concreteTypeId": "3f702ea3351c9c1ece2b84048006c8034a24cbc2bad2e740d0412b4172951d3d"
    },
    {
      "logId": "10516624671986619165",
      "concreteTypeId": "91f28e6b71df131de051f19a1f8cb58ece2165f4a5f9108fbb85471538446fa9"
    },
    {
      "logId": "9380741853358249135",
      "concreteTypeId": "822f1703ab0ed4af1dc35ef9e0ca4958c06eef96d7e0dd9fa8b1a48316ac39cb"
    },
    {
      "logId": "10288224578490882859",
      "concreteTypeId": "8ec71dbeaa645b2b14b88caffc532ebdbbb161e6c75c27bb98b4409a6cb4755a"
    },
    {
      "logId": "5557842539076482339",
      "concreteTypeId": "4d216c57b3357523323f59401c7355785b41bdf832f6e1106272186b94797038"
    },
    {
      "logId": "2995604236870753654",
      "concreteTypeId": "2992862e9a561d761b74985c9333d79e22836314eed6bc983c25dcf096c755c8"
    },
    {
      "logId": "10032608944051208538",
      "concreteTypeId": "8b3afcadf894415a10b09fc3717487e33802c8ffbb030edafe84ca4a71b280bc"
    },
    {
      "logId": "8887194707992577051",
      "concreteTypeId": "7b55a88023a1041ba857dbda5e33dc9793daf8f5e3fa5bffcdb82aa634ceff43"
    },
    {
      "logId": "5596540746579447825",
      "concreteTypeId": "4daae82842de101195b6ec681faea04e30e9dad318f1c643d114671a812e5ad3"
    },
    {
      "logId": "1991902595969952905",
      "concreteTypeId": "1ba4a8db83f7ac89d556b54bc6c30eafef4a476bb9660db5e0857a105906547b"
    },
    {
      "logId": "2161305517876418151",
      "concreteTypeId": "1dfe7feadc1d9667a4351761230f948744068a090fe91b1bc6763a90ed5d3893"
    },
    {
      "logId": "16280289466020123285",
      "concreteTypeId": "e1ef35033ea9d2956f17c3292dea4a46ce7d61fdf37bbebe03b7b965073f43b5"
    },
    {
      "logId": "12970362301975156672",
      "concreteTypeId": "b3fffbcb3158d7c010c31b194b60fb7857adb4ad61bdcf4b8b42958951d9f308"
    }
  ],
  "messagesTypes": [],
  "configurables": [
    {
      "name": "RESOLVER_CONTRACT_ID",
      "concreteTypeId": "7c5ee1cecf5f8eacd1284feb5f0bf2bdea533a51e2f0c9aabe9236d335989f3b",
      "offset": 37928
    }
  ]
};

const storageSlots: StorageSlot[] = [];

export class MarketplaceInterface extends Interface {
  constructor() {
    super(abi);
  }

  declare functions: {
    add_valid_asset: FunctionFragment;
    adjust_fee: FunctionFragment;
    cancel_order: FunctionFragment;
    create_order: FunctionFragment;
    edit_order: FunctionFragment;
    execute_order: FunctionFragment;
    get_order: FunctionFragment;
    initialize: FunctionFragment;
    transfer_ownership: FunctionFragment;
    is_paused: FunctionFragment;
    pause: FunctionFragment;
    unpause: FunctionFragment;
  };
}

export class Marketplace extends __Contract {
  static readonly abi = abi;
  static readonly storageSlots = storageSlots;

  declare interface: MarketplaceInterface;
  declare functions: {
    add_valid_asset: InvokeFunction<[asset: AssetIdInput, fee: [BigNumberish, BigNumberish]], void>;
    adjust_fee: InvokeFunction<[asset: AssetIdInput, fee_change: AdjustFeeTypeInput], void>;
    cancel_order: InvokeFunction<[order_id: string], void>;
    create_order: InvokeFunction<[asset: AssetIdInput, price: BigNumberish], void>;
    edit_order: InvokeFunction<[order_id: string, asset: AssetIdInput, price: BigNumberish], void>;
    execute_order: InvokeFunction<[order_id: string], void>;
    get_order: InvokeFunction<[order_id: string], Option<OrderOutput>>;
    initialize: InvokeFunction<[owner: IdentityInput], void>;
    transfer_ownership: InvokeFunction<[new_owner: IdentityInput], void>;
    is_paused: InvokeFunction<[], boolean>;
    pause: InvokeFunction<[], void>;
    unpause: InvokeFunction<[], void>;
  };

  constructor(
    id: string | Address,
    accountOrProvider: Account | Provider,
  ) {
    super(id, abi, accountOrProvider);
  }
}
